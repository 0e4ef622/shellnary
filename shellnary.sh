#!/bin/bash
LC_ALL="C"
declare -A binaryLookup=(
    ['']=1
    ['']=2
    ['']=3
    ['']=4
    ['']=5
    ['']=6
    ['']=7
    ['']=8
    ['	']=9
    ['
']=10
    ['']=11
    ['']=12
    ['']=13
    ['']=14
    ['']=15
    ['']=16
    ['']=17
    ['']=18
    ['']=19
    ['']=20
    ['']=21
    ['']=22
    ['']=23
    ['']=24
    ['']=25
    ['']=26
    ['']=27
    ['']=28
    ['']=29
    ['']=30
    ['']=31
    [' ']=32
    ['!']=33
    ['"']=34
    ['#']=35
    ['$']=36
    ['%']=37
    ['&']=38
    ["'"]=39
    ['(']=40
    [')']=41
    ['*']=42
    ['+']=43
    [',']=44
    ['-']=45
    ['.']=46
    ['/']=47
    ['0']=48
    ['1']=49
    ['2']=50
    ['3']=51
    ['4']=52
    ['5']=53
    ['6']=54
    ['7']=55
    ['8']=56
    ['9']=57
    [':']=58
    [';']=59
    ['<']=60
    ['=']=61
    ['>']=62
    ['?']=63
    ['@']=64
    ['A']=65
    ['B']=66
    ['C']=67
    ['D']=68
    ['E']=69
    ['F']=70
    ['G']=71
    ['H']=72
    ['I']=73
    ['J']=74
    ['K']=75
    ['L']=76
    ['M']=77
    ['N']=78
    ['O']=79
    ['P']=80
    ['Q']=81
    ['R']=82
    ['S']=83
    ['T']=84
    ['U']=85
    ['V']=86
    ['W']=87
    ['X']=88
    ['Y']=89
    ['Z']=90
    ['[']=91
    ['\']=92
    [']']=93
    ['^']=94
    ['_']=95
    ['`']=96
    ['a']=97
    ['b']=98
    ['c']=99
    ['d']=100
    ['e']=101
    ['f']=102
    ['g']=103
    ['h']=104
    ['i']=105
    ['j']=106
    ['k']=107
    ['l']=108
    ['m']=109
    ['n']=110
    ['o']=111
    ['p']=112
    ['q']=113
    ['r']=114
    ['s']=115
    ['t']=116
    ['u']=117
    ['v']=118
    ['w']=119
    ['x']=120
    ['y']=121
    ['z']=122
    ['{']=123
    ['|']=124
    ['}']=125
    ['~']=126
    ['']=127
    ['Ä']=128
    ['Å']=129
    ['Ç']=130
    ['É']=131
    ['Ñ']=132
    ['Ö']=133
    ['Ü']=134
    ['á']=135
    ['à']=136
    ['â']=137
    ['ä']=138
    ['ã']=139
    ['å']=140
    ['ç']=141
    ['é']=142
    ['è']=143
    ['ê']=144
    ['ë']=145
    ['í']=146
    ['ì']=147
    ['î']=148
    ['ï']=149
    ['ñ']=150
    ['ó']=151
    ['ò']=152
    ['ô']=153
    ['ö']=154
    ['õ']=155
    ['ú']=156
    ['ù']=157
    ['û']=158
    ['ü']=159
    ['†']=160
    ['°']=161
    ['¢']=162
    ['£']=163
    ['§']=164
    ['•']=165
    ['¶']=166
    ['ß']=167
    ['®']=168
    ['©']=169
    ['™']=170
    ['´']=171
    ['¨']=172
    ['≠']=173
    ['Æ']=174
    ['Ø']=175
    ['∞']=176
    ['±']=177
    ['≤']=178
    ['≥']=179
    ['¥']=180
    ['µ']=181
    ['∂']=182
    ['∑']=183
    ['∏']=184
    ['π']=185
    ['∫']=186
    ['ª']=187
    ['º']=188
    ['Ω']=189
    ['æ']=190
    ['ø']=191
    ['¿']=192
    ['¡']=193
    ['¬']=194
    ['√']=195
    ['ƒ']=196
    ['≈']=197
    ['∆']=198
    ['«']=199
    ['»']=200
    ['…']=201
    [' ']=202
    ['À']=203
    ['Ã']=204
    ['Õ']=205
    ['Œ']=206
    ['œ']=207
    ['–']=208
    ['—']=209
    ['“']=210
    ['”']=211
    ['‘']=212
    ['’']=213
    ['÷']=214
    ['◊']=215
    ['ÿ']=216
    ['Ÿ']=217
    ['⁄']=218
    ['€']=219
    ['‹']=220
    ['›']=221
    ['ﬁ']=222
    ['ﬂ']=223
    ['‡']=224
    ['·']=225
    ['‚']=226
    ['„']=227
    ['‰']=228
    ['Â']=229
    ['Ê']=230
    ['Á']=231
    ['Ë']=232
    ['È']=233
    ['Í']=234
    ['Î']=235
    ['Ï']=236
    ['Ì']=237
    ['Ó']=238
    ['Ô']=239
    ['']=240
    ['Ò']=241
    ['Ú']=242
    ['Û']=243
    ['Ù']=244
    ['ı']=245
    ['ˆ']=246
    ['˜']=247
    ['¯']=248
    ['˘']=249
    ['˙']=250
    ['˚']=251
    ['¸']=252
    ['˝']=253
    ['˛']=254
    ['ˇ']=255
)

read_lei64() {
    local byte;
    declare -ai num;
    for i in {0..7}; do
        byte='';
        IFS='' read -r -d '' -n1 byte;
        if [ -z "$byte" ]; then
            num[$i]=0;
        else
            num[$i]=$(( binaryLookup[$byte] ));
        fi
    done
    echo $(( (num[7] << 56) +(num[6] << 48) + (num[5] << 40) + (num[4] << 32) + (num[3] << 24) + (num[2] << 16) + (num[1] << 8) + num[0] ));
}

read_leu32() {
    local byte;
    declare -ai num;
    for i in {0..3}; do
        byte='';
        IFS='' read -r -d '' -n1 byte;
        if [ -z "$byte" ]; then
            num[$i]=0;
        else
            num[$i]=${binaryLookup[$byte]};
        fi
    done
    echo $(( (num[3] << 24) + (num[2] << 16) + (num[1] << 8) + num[0] ));
}

read_lei32() {
    declare -i num=$(read_leu32);
    echo $(( num | ~((((num & 0x80000000) >> 31) - 1) | 0xffffffff) ))
}

read_leu16() {
    local byte;
    declare -ai num;
    for i in {0..1}; do
        byte='';
        IFS='' read -r -d '' -n1 byte;
        if [ -z "$byte" ]; then
            num[$i]=0;
        else
            num[$i]=${binaryLookup[$byte]};
        fi
    done
    echo $(( (num[1] << 8) + num[0] ));
}

read_lei16() {
    declare -i num=$(read_leu16);
    echo $(( num | ~((((num & 0x8000) >> 15) - 1) | 0xffff) ))
}

read_u8() {
    local byte;
    declare -ai num;
    IFS='' read -r -d '' -n1 byte;
    if [ -z "$byte" ]; then
        num=0;
    else
        num=${binaryLookup[$byte]};
    fi
    echo $num;
}

read_i8() {
    declare -i num=$(read_leu8);
    echo $(( num | ~((((num & 0x80) >> 7) - 1) | 0xff) ))
}

forward_seek() { # read $1 bytes and throw them away
    declare -i n=$1;
    while read -r -d '' -n $n; do
        [ ${#REPLY} -lt $n ] && (( n -= ${#REPLY} + 1 )) || break;
    done
}
